@charset "utf-8";

@import url('https://fonts.googleapis.com/css2?family=Neonderthaw&display=swap');
/* font-family: 'Neonderthaw', cursive; */
html{
    scroll-behavior: smooth;
    /* 내부 아이디 위치이동시 스크롤 애니메이션을 부드럽게 처리함 */
}
html,body{
    margin: 0;
    padding: 0;

}
 body{
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
    overflow-x: hidden;
} 
/* body *{
    outline : 5px dashed lime;
} */
/* 로봇페이지로고 */
h1#logo{
    position: fixed;
    /* 사라지지않은 포지션 화면 따라다님 */
    top: calc(50% - 100px);
    left: calc(50% - 100px);
    z-index: 1;
    transform: scale(2);

    /* 보이는 화면 기준 */
    width: 200px;
    height: 200px;
    border: 2px solid #ccc;
    border-radius: 50%;
    margin: 0;
    /* h1요소의 기본값 마진 없앰! */
    text-align: center;
    line-height: 200px;

    color: #fff;
    font-family: "Vladimir Script";
    font-size: 60px;
    text-shadow: 2px 2px 2px #000;
    box-shadow: 0 0 20px 5px pink,
                inset 0 0 20px #000;
    /* 박스그림자: 내부 x y blur spread 색 */
    /* 박스그림자나 글자그림자는 콤마로 여러개 셋팅 가능 */
    /* 배경 */
    background: pink url(../images/robot_03.png) no-repeat center 10px/160px;

    /* 애니메이션: 이시이지반방마 */
    animation: logoAni 2s ease-in-out 2s forwards,
               logoAni2 1s ease-in-out 4s infinite alternate;
}

@keyframes logoAni {
    /* from은 초기값과 같으므로 생략! */
    80%{
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(0deg);
    }
    /* 80%~100% 구간에 rotate각도만 20도로 변경애니
    후속애니와 자연스럽게 연결됨! */
    100%{
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(20deg);
    }
} /* logoAni 키프레임 */

/* 로고 흔들기 키프레임 */
@keyframes logoAni2 {
    from{
        transform: scale(1) rotate(20deg);
    }
    to{
        transform: scale(1) rotate(-20deg);
    }
} /*  logoAni2 키프레임 */


/******************************************************* 
    [ CSS 로 애니메이션 하기 ]
    - 시간에 따라 CSS설정을 변경하여 애니메이션 하도록
    키프레임을 설정하고 이것을 호출함으로 의도된 연출을
    구현하는 것이 CSS 애니메이션이다!
    [ 애니메이션 키프레임 만들기 ]
    - 키프레임이란? 애니메이션 장면을 넣는 코드
    1. 두장면 키프레임
    @keyframes 키프레임이름{
        from{시작CSS설정}
        to{끝나는CSS설정}
    }
    또는
    @keyframes 키프레임이름{
        0%{시작CSS설정}
        100%{끝나는CSS설정}
    }
    -> 만약 from설정과 초기설정이 같다면 from을 생략할 수 있다!
    2. 여러장면 키프레임
    @keyframes 키프레임이름{
        0%{CSS설정}
        10%{CSS설정}
        20%{CSS설정}
        ...
        90%{CSS설정}
        100%{CSS설정}
    }
    (1) 장면에 대한 시간 계산은 어떻게 하나?
    -> 전체시간 * 설정된%/100
    (2) 전체시간 설정은 호출시에 셋팅함!
    [ 설정된 키프레임 호출하는 방법 ]
    animation: 이시이지반방마
    (이름 시간 이징 지연 반복 방향 마지막상태)
    1. 이름(animation-name) : 키프레임 이름
    2. 시간(animation-duration) : 애니메이션 동작시간
        -> 초단위(s)
    3. 이징(animation-timing-function) : easing가속도
    4. 지연(animation-delay) : 애니메이션 시작지연시간(s)
    5. 반복(animation-iteration-count) : 애니메이션 반복
        - 기본값 1 , 숫자를 쓰면 숫자만큼 반복함!
        - 영원히는 infinite(인피니트)
    6. 방향(animation-direction) : 시작 -> 끝
        - 반복시 시작과 반대경로로 애니를 만들어줌
        -> alternate : 시작->끝, 끝->시작
    7. 마지막상태(animation-fill-mode) : 
        - 애니메이션이 끝났을때 처음으로 돌아가는게 기본인데
        -> forwards (앞쪽에... 즉, 애니끝장면으로 마무리!)
*******************************************************/

    


@keyframes logoAni {
    to{
        top: 50px;
        left: 50px;
        transform: scale(1);
    }
}


.link{
    position: absolute;
    top: 100px;
    right: 50px;
    /* 부모는 보이는 화면 */
    opacity: 0;
    animation: showIt 2s ease-in 6s forwards;
}

@keyframes showIt {
    0%{opacity: 0;}
    20%{opacity: 0.5;}
    30%{opacity: 0;}
    40%{opacity: 1;}
    50%{opacity: 0.3;}
    60%{opacity: 0;}
    80%{opacity: 0.7;}
    100%{opacity: 1;}
    
}
.link a{
    color: #fff;
    text-decoration: none;
    text-shadow: 2px 2px 2px #000;
    font-family: 'Neonderthaw', cursive;
    font-size: 5vw;
}
.link a:hover{
    color: blueviolet;
    text-decoration: overline;
}
/* 위로이동버튼 */
.btnTop{
    position: fixed;
    bottom: 50px;
    right: 20px;
    width: 100px;
    height: 100px;
    text-align: center;
    line-height: 100px;
    border-radius: 50%;
    color: blue;
    font-size: 24px;
    font-weight: bold;
    text-decoration: none;
    background-color: #ccc;
    opacity: 0;
    animation: showIt 5s ease-in 6s forwards;
}
.btnTop:hover{
    background-color: blueviolet;
    color: red;
}



/* 로봇머리 */
#head{
    position: relative;
    left: 100%;
    width: 250px;
    height: 250px;
    background: url(../images/metal01.jpg) no-repeat center/cover;
    margin: 0 auto;
    margin-top: 100px;
    /* 애니메이션 */
    animation: robotAni 1.5s ease-out 3s forwards;


}


@keyframes robotAni {
    to{
        left: 0;
    }
}
/* 눈1 */
#eye1{
    position: absolute;
    top: 50px;
    left: 50px;
    /* 부모는 #head*/

    width: 50px;
    height: 50px;
    background: url(../images/e1.jpg) no-repeat 0/100% 100%;
}
/* 눈2 */
#eye2{
    position: absolute;
    top: 50px;
    right: 50px;
    /* 부모는 #head */

    width: 50px;
    height: 50px;
    background: url(../images/e2.jpg) no-repeat 0/100% 100%;
}
/* 코 */
#nose{
    position: absolute;
    top: 100px;
    right: 100px;
    /* 부모는 #head */

    width: 50px;
    height: 70px;
    background: url(../images/nose.jpg) no-repeat 0/110% 100%;
}
/* 입 */
#mouth{
    position: absolute;
    top: 170px;
    right: 80px;
    /* 부모는 #head */

    width: 100px;
    height: 70px;
    background: url(../images/mouth.png) no-repeat 0/110% 100%;
}

/* 귀공통 */
.ear{
    position: absolute;
    top: 70px;
    width: 50px;
    height: 100px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
}
/* 귀1 */
#ear1{
    left: -50px;
    border-radius: 20% 0 0 20%;
    /* 보더 각 셋팅: 왼쪽 위 부터 시계방향 */
}
#ear2{
    right: -50px;
    border-radius: 0 20% 20% 0;
}

/* 로봇몸 */
#body{
    position: relative;
    /* 부모자격 */
    width: 250px;
    height: 300px;
    left: -100%;
    margin: 0 auto;
    margin-top: 50px;
    margin-bottom: 300px;
    background: url(../images/metal01.jpg) no-repeat center/cover;
    animation: robotAni 1.5s ease-out 3s forwards;
}
#neck{
    position: absolute;
    top: -50px;
    left: 100px;
    width: 50px;
    height: 50px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
}

/* 팔다리 공통 */
.part{
    position: absolute;
    width: 50px;
    height: 250px;
    background: url(../images/metal02.jpg) repeat-y 0/100% 100%;
}
#arm1{
    left: -50px;
}
#arm2{
    right: -50px;
    transform-origin: top;
    /* 세로기준축을 맨 위로 변경  */
    animation: armAni .8s ease-in-out 5s forwards;
    animation: armAni2 .4s ease-in-out 5.8s infinite alternate;
}
/* 오른팔키프레임 */
@keyframes armAni {
    to{
        transform: rotate(-152deg);
    }
    
}
/* 오른팔흔들기키프레임 */
@keyframes armAni2 {
    0%{
        transform: rotate(-152deg);
    }
    100%{
        transform: rotate(-142deg);
    }
    
}



#leg1{
    bottom: -250px;
    left: 0;
}
#leg2{
    bottom: -250px;
    right: 0;
}
/* 어깨 공통 */
.sh{
    position: absolute;
    width: 80px;
    height: 80px;
    background: url(../images/metal01.jpg) no-repeat center/cover;

}
#sh1{
    top: -10px;
    left: -80px;
    border-radius: 30% 0 0 30%;
}
#sh2{
    top: -10px;
    right: -80px;
    border-radius: 0 30% 30% 0;
}
/* tv */
#tv{
    position: absolute;
    top: 55px;
    left: 24px;
    /* 부모는? body */
    width: 200px;
    height: 150px;
    background: url(../images/tv.jpg) no-repeat 0/100% 100%;
}
/* 스크린 */
#screen{
    position: absolute;
    top: 17px;
    left: 12px;
    /* 부모는? #tv */
    width: 140px;
    height: 106px;
    background-color: #222;
    border-radius: 16px;

    overflow: hidden;
}
/* 유튜브 아이프레임 */
#screen iframe{
    position: absolute;
    top: 0;
    left: 0;
    /* 부모는 screen */
    width: 100%;
    height: 100%;
}
#dcbx{
    width: 800px;
    margin: 0 auto;
    margin-bottom: 200px;
    border: 3px solid #fff;
    border-radius: 20px;
    padding: 15px 30px;
    background-color: rgba(0, 0, 0, 0.411);
    color: #fff;
    text-shadow: 1px 1px 1px #000;
    box-shadow: inset 0 0 60px cyan;
    /* 박스그림자: (내부) x y 블러 (크기) 색 */
}
/* 로봇설명 제목 */
#dcbx h2{
    position: sticky;
    top: 0;
    font-size: 35px;
    text-align: center;
    color: lime;
    background-color: rgba(255, 255, 255, 0.4);

}
/* 설명출ㅊ처 */
#dcbx small{
    display: block;
    /* 텍스트 중앙정렬 */
    text-align: center;
    color: #ff0;
}
/* 설명문단 */
#dcbx p{
    font-size: 15px;
    line-height: 1.5;
    /* 줄간격:배수/단위 등 */
    letter-spacing: 1px;
    /* 자간 */
    word-spacing: 2px;
    /* 단어간격 */

    /* 가독성 */
    /* e다단표시 */
    column-count: 3;
    /* 다중열 구분선 값은 보더와 같다 (두께 종류 색상) */
    column-rule: 5px dotted lime;
    /* 다중열 사이 간격  */
    column-gap: 50px;
    /* 양쪽정렬 - 끝라인을 맞춰줌 */
    text-align: justify;
    /* 단어단위를 한글자 씩으로 깨준다 양쪽 정렬시 사용하면 보기 좋다 */
    word-break: break-all;
    /* 첫줄 들여쓰기(-값 사용시 내여쓰기 가능) */
    text-indent: 20px;
}

/* 가상요소로 첫글자 디자인 변경하기 */
#dcbx p::first-letter{
    font-size: 30px;
    font-weight: bold;
    color: lightcoral;
}

